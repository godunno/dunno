#= depend_on_asset "courses/index.html"
#= depend_on_asset "courses/form.html"
#= depend_on_asset "courses/show.html"
#= depend_on_asset "events/index.html"
#= depend_on_asset "events/show.html"
#= depend_on_asset "medias/index.html"

DunnoApp = angular.module 'DunnoApp', ['ngResource', 'rails', 'ui.keypress', 'ui.sortable', 'angularFileUpload', 'ngTagsInput', 'puElasticInput', 'validation.match', 'ngMessages', 'ui.utils.masks', 'mm.foundation', 'cgBusy', 'ngAnimate', 'angulartics', 'angulartics.google.analytics', 'angulartics.intercom', 'angulartics.mixpanel', 'foundation.actionsheet', 'ui.router', 'angular.filter']

Router = ($stateProvider, $urlRouterProvider, CoursesResolver, CourseResolver, CourseRegistrationResolver, EventsResolver, EventResolver, MediasResolver) ->
  $urlRouterProvider.otherwise('/courses')
  $stateProvider
    .state('courses',
      url: '/courses'
      controller: 'CoursesIndexCtrl as vm'
      templateUrl: '<%= asset_path('courses/index.html') %>'
      resolve: { courses: CoursesResolver }
    )
    .state('courses.new',
      url: '/new'
      controller: 'CourseCtrl'
      templateUrl: '<%= asset_path('courses/form.html') %>'
    )
    .state('courses.search',
      url: '/search'
      controller: 'CourseSearchCtrl'
      templateUrl: '<%= asset_path('courses/search.html') %>'
    )
    .state('courses.confirm_registration',
      url: '/:id/confirm_registration'
      controller: 'CourseConfirmRegistrationCtrl'
      templateUrl: '<%= asset_path('courses/confirm_registration.html') %>'
      resolve: { course: CourseRegistrationResolver }
    )
    .state('courses.edit',
      url: '/:id/edit'
      controller: 'CourseCtrl'
      templateUrl: '<%= asset_path('courses/form.html') %>'
      resolve: { course: CourseResolver }
    )
    .state('courses.show',
      url: '/:courseId'
      abstract: true
      controller: 'CourseCtrl'
      templateUrl: '<%= asset_path('courses/show.html') %>'
      resolve: { course: CourseResolver }
    )
    .state('courses.show.calendar',
      url: '/calendar?month'
      controller: 'CourseCtrl'
      templateUrl: '<%= asset_path('courses/tabs/calendar.html') %>'
      resolve: { course: CourseResolver }
    )
    .state('courses.show.events',
      url: '/events?until'
      controller: 'CourseEventsCtrl'
      templateUrl: '<%= asset_path('courses/tabs/events.html') %>'
      resolve: { events: EventsResolver }
    )
    .state('courses.show.members',
      url: '/members'
      controller: 'CourseMembersCtrl'
      templateUrl: '<%= asset_path('courses/tabs/members.html') %>'
      resolve: { course: CourseResolver }
    )
    .state('courses.show.event',
      url: '/events/:eventId'
      views:
          '@':
            templateUrl: '<%= asset_path('events/show.html') %>'
            controller: 'EventCtrl'
      resolve: { event: EventResolver }
    )
    .state('events',
      url: '/events'
      controller: 'EventsIndexCtrl'
      templateUrl: '<%= asset_path('events/index.html') %>'
      resolve: { events: EventsResolver }
    )
    .state('events.new',
      url: '/new'
      controller: 'EventCtrl'
      templateUrl: '<%= asset_path('events/show.html') %>'
    )
    .state('events.show',
      url: '/:eventId'
      controller: 'EventCtrl'
      templateUrl: '<%= asset_path('events/show.html') %>'
      resolve: { event: EventResolver }
    )
    .state('medias',
      url: '/catalog'
      controller: 'MediasIndexCtrl'
      templateUrl: '<%= asset_path('medias/index.html') %>'
      resolve: { searchResult: MediasResolver }
    )
    .state('profile',
      url: '/profile/edit'
      controller: 'ProfileCtrl'
      templateUrl: '<%= asset_path('profile/form.html') %>'
    )
    .state('profile.change_password',
      url: '/profile/password/edit'
      controller: 'ProfileCtrl'
      templateUrl: '<%= asset_path('password/form.html') %>'
    )
Router.$inject = ['$stateProvider', '$urlRouterProvider', 'CoursesResolver', 'CourseResolver', 'CourseRegistrationResolver', 'EventsResolver', 'EventResolver', 'MediasResolver']
DunnoApp.config Router

DunnoApp.config(["railsSerializerProvider", "tagsInputConfigProvider", (railsSerializerProvider, tagsInputConfigProvider)->
  railsSerializerProvider.underscore(angular.identity).camelize(angular.identity)
])

DunnoApp.constant('AUTOSAVE_INTERVAL', 5000)

DunnoApp.value('cgBusyDefaults',
  templateUrl: '<%= asset_path('_loading.html') %>',
  minDuration: 500,
  wrapperClass: 'cg-busy cg-busy-animation ng-animate'
)

DunnoApp.config ['$animateProvider', ($animateProvider) ->
  $animateProvider.classNameFilter(/ng-animate/)
]
